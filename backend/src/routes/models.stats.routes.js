// ============================================
// üìä RedVelvetLive ‚Äî Rutas P√∫blicas de Estad√≠sticas de Modelos (PRO FINAL)
// ============================================
//
// Devuelve m√©tricas r√°pidas para KPIs o dashboards:
//   ‚úÖ Total de modelos activos
//   ‚úÖ Total de inactivos
//   ‚úÖ Total de destacadas
//   ‚úÖ Total de embajadoras
//   ‚úÖ Total en vivo (ONLINE o VOICE_ONLY)
// ============================================

import express from "express";
import ModelUser from "../models/ModelUser.js";

const router = express.Router();

/* ==========================================================
   ‚úÖ Estad√≠sticas globales de modelos
   ========================================================== */
router.get("/", async (req, res) => {
  try {
    const [active, inactive, featured, ambassadors, live] = await Promise.all([
      ModelUser.countDocuments({ status: "ACTIVE" }),
      ModelUser.countDocuments({ status: "INACTIVE" }),
      ModelUser.countDocuments({ featured: true, status: "ACTIVE" }),
      ModelUser.countDocuments({ ambassador: true, status: "ACTIVE" }),
      ModelUser.countDocuments({
        status: "ACTIVE",
        liveStatus: { $in: ["ONLINE", "VOICE_ONLY"] },
      }),
    ]);

    res.json({
      success: true,
      data: {
        active,
        inactive,
        featured,
        ambassadors,
        live,
      },
      timestamp: new Date(),
    });
  } catch (error) {
    console.error("‚ùå Error obteniendo estad√≠sticas:", error);
    res.status(500).json({
      success: false,
      message: "Error interno al obtener estad√≠sticas de modelos.",
    });
  }
});

export default router;